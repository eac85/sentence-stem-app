[{"/Users/emery/Documents/sentence-app/src/index.js":"1","/Users/emery/Documents/sentence-app/src/App.js":"2","/Users/emery/Documents/sentence-app/src/reportWebVitals.js":"3"},{"size":10435,"mtime":1607463904548,"results":"4","hashOfConfig":"5"},{"size":528,"mtime":1606950333694,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1606950333697,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"12849re",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/emery/Documents/sentence-app/src/index.js",["15","16","17","18","19"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Button from 'react-bootstrap/Button'\n\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" \n    style={{height: '30px', width : '100px'}}\n    size=\"lg\" \n    onClick={props.onClick}>\n    {props.value}\n    </button>\n    );\n  }\n\n\n  class Board extends React.Component {\n    renderSquare(i) {\n      return (\n      <Square\n      value={\"Week \" + i}\n      onClick={() => this.props.onClick(i)}\n      />\n      );\n    }\n\n    render() {\n      return (\n      <div>\n      <div className=\"board-row\">\n      {this.renderSquare(1)}\n      {this.renderSquare(2)}\n      {this.renderSquare(3)}\n      {this.renderSquare(4)}\n      {this.renderSquare(5)}\n      {this.renderSquare(6)}\n      {this.renderSquare(7)}\n      {this.renderSquare(8)}\n      </div>\n\n      <div className=\"board-row\">\n      {this.renderSquare(9)}\n      {this.renderSquare(10)}\n      {this.renderSquare(11)}\n      {this.renderSquare(12)}\n      {this.renderSquare(13)}\n      {this.renderSquare(14)}\n      {this.renderSquare(15)}\n      {this.renderSquare(16)}\n      </div>\n\n      <div className=\"board-row\">\n      {this.renderSquare(17)}\n      {this.renderSquare(18)}\n      {this.renderSquare(19)}\n      {this.renderSquare(20)}\n      {this.renderSquare(21)}\n      {this.renderSquare(22)}\n      {this.renderSquare(23)}\n      {this.renderSquare(24)}\n      </div>\n\n      <div className=\"board-row\">\n      {this.renderSquare(25)}\n      </div>\n      </div>\n      );\n    }\n  }\n\n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      \n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleEndOfWeek = this.handleEndOfWeek.bind(this);\n\n      this.state = {\n        history: [\n        {\n          squares: Array(9).fill(null)\n        }\n        ],\n        stepNumber: 0,\n        xIsNext: true,\n        stemString1: null,\n        stemString2: null,\n        stemString3: null,\n        stemString4: null,\n        weekText1: null,\n        weekText2: null,\n        weekText3: null,\n        weekText4: null,\n        weekNum: null,\n        id1: null,\n        id2: null,\n        id3: null,\n        id4: null\n      };\n    }\n\n    handleClick(i) {\n      setWeek(i);\n      let index = i*4;      \n      this.setState({\n        weekNum:i,\n        stemString1:getStem(index - 3),\n        stemString2:getStem(index - 2),\n        stemString3:getStem(index - 1),\n        stemString4:getStem(index),\n        id1: index - 3,\n        id2: index - 2,\n        id3: index - 1,\n        id4: index \n      });\n    }\n\n    handleSubmit(event) {\n      let weekNum = getWeek();\n      event.preventDefault();\n      const data = new FormData(event.target);\n\n      let stemNumber = data.get('stem');\n      console.log(stemNumber);\n\n      postFinisher('http://localhost:3002/finishers', \n      {\"stem_number\":stemNumber, \"finisher\":data.get('0')});\n      postFinisher('http://localhost:3002/finishers', \n      {\"stem_number\":stemNumber, \"finisher\":data.get('1')});\n      postFinisher('http://localhost:3002/finishers', \n      {\"stem_number\":stemNumber, \"finisher\":data.get('2')});\n      postFinisher('http://localhost:3002/finishers', \n      {\"stem_number\":stemNumber, \"finisher\":data.get('3')});\n      postFinisher('http://localhost:3002/finishers', \n      {\"stem_number\":stemNumber, \"finisher\":data.get('4')});\n\n    }\n\n\n    handleEndOfWeek(){\n      let weekNum = getWeek();\n      let index = weekNum*4;\n      fetch('http://localhost:3002/finishers')\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        let tempString1 = getStem(index - 3);\n        let tempString2 = getStem(index - 2);\n        let tempString3 = getStem(index - 1);\n        let tempString4 = getStem(index);\n\n\n        json.forEach(function(item){\n          switch(item.stem_number) {\n            case (index - 3):\n            tempString1 = tempString1 + \", \" + item.finisher;\n            break;\n            case (index - 2):\n            tempString2 = tempString2 + \", \" + item.finisher;\n            break;\n            case (index - 1):\n            tempString3 = tempString3 + \", \" + item.finisher;\n            break;\n            case (index): \n            tempString4 = tempString4 + \", \" + item.finisher;\n            break;\n          }\n\n        })\n        this.setState({\n          weekText1:tempString1,\n          weekText2:tempString2,\n          weekText3:tempString3,\n          weekText4:tempString4\n        });\n      })\n      .catch((error) => {\n        console.error(error);\n      });    \n    }\n\n\n    render() {\n      let stem1 = this.state.stemString1;\n      let stem2 = this.state.stemString2;\n      let stem3 = this.state.stemString3;\n      let stem4 = this.state.stemString4;\n      let weekText1Var = this.state.weekText1;\n      let weekText2Var = this.state.weekText2;\n      let weekText3Var = this.state.weekText3;\n      let weekText4Var = this.state.weekText4;\n      let weekNum = this.state.weekNum;\n      let id1 = this.state.id1;\n      let id2 = this.state.id2;\n      let id3 = this.state.id3;\n      let id4 = this.state.id4;\n\n      return (\n      <div className=\"game\">\n      <h1> Sentence Stem Completion</h1>\n      <h4> inspired by <a href='http://nathanielbranden.com/sentence-completion-i'> Nathaniel Branden </a> </h4>\n      <div className=\"game-board\">\n      <Board\n      onClick={i => this.handleClick(i)}\n      />\n      </div>\n      <div className=\"game-info\">\n      \n      <form onSubmit={this.handleSubmit} autocomplete=\"off\">\n      <h3>{stem1}</h3>\n      <input type=\"hidden\" name=\"stem\" value={id1}/>\n      <input id=\"0\" name=\"0\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"1\" name=\"1\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"2\" name=\"2\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"3\" name=\"3\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"4\" name=\"4\"\n      type=\"text\"\n      required/><br/>\n      <button className=\"square\">Send data!</button>\n      </form>\n      <form onSubmit={this.handleSubmit} autocomplete=\"off\">\n      <h3>{stem2}</h3>\n      <input type=\"hidden\" name=\"stem\" value={id2}/>\n      <input id=\"0\" name=\"0\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"1\" name=\"1\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"2\" name=\"2\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"3\" name=\"3\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"4\" name=\"4\"\n      type=\"text\"\n      required/><br/>\n      <button className=\"square\">Send data!</button>\n      </form>\n      <form onSubmit={this.handleSubmit} autocomplete=\"off\">\n      <h3>{stem3}</h3>\n      <input type=\"hidden\" name=\"stem\" value={id3}/>\n      <input id=\"0\" name=\"0\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"1\" name=\"1\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"2\" name=\"2\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"3\" name=\"3\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"4\" name=\"4\"\n      type=\"text\"\n      required/><br/>\n      <button className=\"square\">Send data!</button>\n      </form>\n      <form onSubmit={this.handleSubmit} autocomplete=\"off\">\n      <h3>{stem4}</h3>\n      <input type=\"hidden\" name=\"stem\" value={id4}/>\n      <input id=\"0\" name=\"0\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"1\" name=\"1\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"2\" name=\"2\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"3\" name=\"3\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"4\" name=\"4\"\n      type=\"text\"\n      required/><br/>\n      <button className=\"square\">Send data!</button>\n      </form>\n      </div>\n      <button className=\"square\" onClick={() => this.handleEndOfWeek()}>End of the week</button>\n      <p> {weekText1Var}</p>\n      <p> {weekText2Var}</p>\n      <p> {weekText3Var}</p>\n      <p> {weekText4Var}</p>\n      <form onSubmit={this.handleSubmit} autocomplete=\"off\">\n      <h3>If any of what I wrote this week is true, it might be helpful if Iâ€¦</h3>\n      <input type=\"hidden\" name=\"stem\" value={stem3}/>\n      <input id=\"0\" name=\"0\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"1\" name=\"1\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"2\" name=\"2\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"3\" name=\"3\"\n      type=\"text\"\n      required/> <br/>\n      <input id=\"4\" name=\"4\"\n      type=\"text\"\n      required/><br/>\n      <button className=\"square\">Send data!</button>\n      </form>\n      </div>\n      );\n    }\n  }\n\n\n\n\n  // ========================================\n\n  ReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n  let fileContents = new Array();\n  let WEEKNUM = 0;\n\n  function setWeek(week){\n    WEEKNUM = week;\n  }\n\n  function getWeek(){\n    return WEEKNUM;\n  }\n\n\n  function getStem(i){\n    let stemMap = new Map([\n      [1, 'If I bring more awareness to my life todayâ€¦'], \n      [2, 'If I take more responsibility for my choices and actions todayâ€¦'],\n      [3, 'If pay more attention to how I deal with people todayâ€¦'],\n      [4, 'If I boost my energy level by 5 percent todayâ€¦'],\n      [5, 'If I bring 5 percent more awareness to my important relationshipsâ€¦'],\n      [6, 'If I bring 5 percent more awareness to my insecuritiesâ€¦'],\n      [7, 'If I bring 5 percent more awareness to my deepest needs and wantsâ€¦'],\n      [8, 'If I bring 5 percent more awareness to my emotionsâ€¦'],\n      [9, 'If I treat listening as a creative actâ€¦'],\n      [10, 'If I notice how people are affected by the quality of my listeningâ€¦'],\n      [11, 'If I bring more awareness to my dealings with people todayâ€¦'],\n      [12, 'If I commit to dealing with people fairly and benevolentlyâ€¦']\n      ]);\n    return stemMap.get(i);\n  }\n\n  function handleErrors(response) {\n    if (!response.ok) {\n        alert(\"error\");\n        throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  async function postFinisher(url = '', data = {}) {\n    // Default options are marked with *\n    fetch('http://localhost:3002/finishers', {\n    method: 'POST', // or 'PUT'\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n    .then(handleErrors)\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', data);\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n  \n}\n\n\n\n\n","/Users/emery/Documents/sentence-app/src/App.js",[],"/Users/emery/Documents/sentence-app/src/reportWebVitals.js",[],{"ruleId":"20","severity":1,"message":"21","line":121,"column":11,"nodeType":"22","messageId":"23","endLine":121,"endColumn":18},{"ruleId":"24","severity":1,"message":"25","line":156,"column":11,"nodeType":"26","messageId":"27","endLine":169,"endColumn":12},{"ruleId":"20","severity":1,"message":"21","line":194,"column":11,"nodeType":"22","messageId":"23","endLine":194,"endColumn":18},{"ruleId":"20","severity":1,"message":"28","line":329,"column":7,"nodeType":"22","messageId":"23","endLine":329,"endColumn":19},{"ruleId":"29","severity":1,"message":"30","line":329,"column":22,"nodeType":"31","messageId":"32","endLine":329,"endColumn":33},"no-unused-vars","'weekNum' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'fileContents' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral"]